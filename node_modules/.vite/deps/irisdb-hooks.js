import {
  Hex,
  PublicKey,
  ndk,
  publicState
} from "./chunk-RUGU4AMR.js";
import {
  J
} from "./chunk-UPIFAGUU.js";
import {
  require_react
} from "./chunk-4S2OYCSJ.js";
import {
  __toESM
} from "./chunk-DWA4UIM3.js";

// node_modules/irisdb-hooks/dist/irisdb-hooks.es.js
var import_react = __toESM(require_react());
function p(t, s, e, n = (f) => f, r = false, u = 1, S = true) {
  (0, import_react.useEffect)(() => {
    S && !e && t.get(s).once(
      (i) => {
        e = n(i);
      },
      void 0,
      u
    );
  }, [t, s, e]);
  const [f, c] = (0, import_react.useState)(S ? e : /* @__PURE__ */ new Map());
  (0, import_react.useEffect)(() => t.get(s).on(
    (o, a, m, w) => {
      c(S ? n(o) : (M) => {
        const h = new Map(M);
        return h.set(a, n(o)), h;
      }), r && w();
    },
    void 0,
    u,
    void 0,
    S
  ), [t, s, r]);
  const l = (0, import_react.useCallback)(
    (i) => {
      t.get(s).put(i);
    },
    [t, s]
  );
  return [f, l];
}
function v(t, s, e, n, r = false, u = 1) {
  return p(t, s, e, n, r, u, true);
}
function B(t, s, e, n = false, r = 1) {
  return p(t, s, void 0, e, n, r, false);
}
function H(t, s, e = (r) => r, n = 1) {
  return v(J, t, s, e, false, n);
}
function L(t, s) {
  const [e] = H("user/publicKey", ""), n = (0, import_react.useMemo)(() => t ? t === "follows" ? e ? [String(e)] : [] : [new PublicKey(t).toString()] : [], [e, t]), [r, u] = (0, import_react.useState)(new Set(n));
  return (0, import_react.useEffect)(() => {
    if (e && t === "follows") {
      const f = ndk().subscribe({ kinds: [3], authors: [String(e)] });
      return f.on("event", (c) => {
        if (c.kind === 3) {
          const l = /* @__PURE__ */ new Set([String(e)]);
          let i = false;
          c.tags.forEach((o) => {
            if (o[0] === "p")
              try {
                new Hex(o[1], 64), l.has(o[1]) || (l.add(o[1]), i = true);
              } catch {
                console.error("Invalid public key", o[1]);
              }
          }), i && u(l);
        }
      }), () => f.stop();
    }
  }, [t, e]), (0, import_react.useEffect)(() => {
    const f = new Set(n);
    if ((!r || Array.from(r).sort().toString() !== Array.from(f).sort().toString()) && u(f), !(!t || t === "follows") && s)
      return publicState(t).get(s).forEach(
        (c, l) => {
          u((i) => {
            const o = l.split("/").pop(), a = new Set(i), m = a.has(o);
            return c && !m ? (a.add(o), a) : !c && m ? (a.delete(o), a) : i;
          });
        },
        0,
        Boolean
      );
  }, [t, s, n]), (0, import_react.useMemo)(() => Array.from(r), [r]);
}
function j(t, s, e, n, r = 1) {
  const u = (0, import_react.useMemo)(() => publicState(t), [t]);
  return v(u, s, e, n, false, r);
}
function q(t, s, e, n = 1) {
  const r = (0, import_react.useMemo)(() => publicState(t), [t]);
  return B(r, s, e, false, n);
}
export {
  L as useAuthors,
  H as useLocalState,
  v as useNodeState,
  q as usePublicGroupState,
  j as usePublicState
};
//# sourceMappingURL=irisdb-hooks.js.map
