import { JsonValue, Node, TypeGuard } from 'irisdb';
/**
 * Similar to React's useState, but for a Node's value. Lets you easily persist your application state locally or sync it over the network.
 * @param node
 * @param key
 * @param initialValue
 * @param once
 * @example const [value, setValue] = useNodeState(publicState, 'apps/canvas/documents/test/name', 'Untitled Canvas'})
 */
export declare function useNodeState<T = JsonValue>(node: Node, key: string, initialValue: T, typeGuard?: TypeGuard<T>, once?: boolean, recursion?: number): [T, (value: JsonValue) => void];
export declare function useGroupNodeState<T = JsonValue>(node: Node, key: string, typeGuard?: TypeGuard<T>, once?: boolean, recursion?: number): [Map<string, T>, (value: JsonValue) => void];
//# sourceMappingURL=useNodeState.d.ts.map